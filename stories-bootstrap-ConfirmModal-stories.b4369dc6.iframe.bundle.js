"use strict";(self.webpackChunk_weavingwebs_ww_react=self.webpackChunk_weavingwebs_ww_react||[]).push([[988],{"./src/stories/bootstrap/ConfirmModal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BsConfirmModalExample:()=>BsConfirmModalExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _bootstrap_Button__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/bootstrap/Button/index.tsx"),_hooks_useConfirmModal__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useConfirmModal.ts"),_bootstrap__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/bootstrap/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const BsConfirmModalExample=()=>{const confirmModalState=(0,_hooks_useConfirmModal__WEBPACK_IMPORTED_MODULE_1__.t)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("h1",{children:"Deprecated"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p",{className:"mb-3",children:["This component is now deprecated, use BsWwConfirmModal instead."," "]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"mb-3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_bootstrap_Button__WEBPACK_IMPORTED_MODULE_0__.z,{variant:"primary",onClick:()=>confirmModalState.showConfirm({onConfirm:async()=>{await new Promise((resolve=>{setTimeout((()=>{alert("Confirmed successfully"),resolve(null)}),500)}))}}),children:"Open modal (successful confirm)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"mb-3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_bootstrap_Button__WEBPACK_IMPORTED_MODULE_0__.z,{variant:"primary",onClick:()=>confirmModalState.showConfirm({onConfirm:async()=>{await new Promise(((resolve,reject)=>{setTimeout((()=>{reject(new Error("I failed"))}),500)}))}}),children:"Open modal (failed confirm)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_bootstrap_Button__WEBPACK_IMPORTED_MODULE_0__.z,{variant:"primary",onClick:()=>confirmModalState.showConfirm({dontAutoCloseOnSuccess:!0,onConfirm:async()=>{await new Promise((resolve=>{setTimeout((()=>{alert("Confirmed successfully"),resolve(null)}),500)}))}}),children:"Open modal (successful confirm & don't auto-close on success)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_bootstrap__WEBPACK_IMPORTED_MODULE_2__.BW,{...confirmModalState})]})};BsConfirmModalExample.displayName="BsConfirmModalExample";const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:"import { FC } from 'react';\nimport { Meta } from '@storybook/react';\nimport { Button } from '../../bootstrap/Button';\nimport { useConfirmModal } from '../../hooks/useConfirmModal';\nimport { BsConfirmModal } from '../../bootstrap';\nexport const BsConfirmModalExample: FC = () => {\n  const confirmModalState = useConfirmModal();\n  return <div>\n      <h1>Deprecated</h1>\n      <p className=\"mb-3\">\n        This component is now deprecated, use BsWwConfirmModal instead.{' '}\n      </p>\n      <div className=\"mb-3\">\n        <Button variant=\"primary\" onClick={() => confirmModalState.showConfirm({\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              \n              alert('Confirmed successfully');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (successful confirm)\n        </Button>\n      </div>\n      <div className=\"mb-3\">\n        <Button variant=\"primary\" onClick={() => confirmModalState.showConfirm({\n        onConfirm: async () => {\n          await new Promise((resolve, reject) => {\n            setTimeout(() => {\n              reject(new Error('I failed'));\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (failed confirm)\n        </Button>\n      </div>\n      <div>\n        <Button variant=\"primary\" onClick={() => confirmModalState.showConfirm({\n        dontAutoCloseOnSuccess: true,\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              \n              alert('Confirmed successfully');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          {`Open modal (successful confirm & don't auto-close on success)`}\n        </Button>\n      </div>\n\n      <BsConfirmModal {...confirmModalState} />\n    </div>;\n};\nconst meta: Meta = {\n  title: 'Bootstrap/BsConfirmModal (deprecated)',\n  component: BsConfirmModalExample\n};\nexport default meta;\nBsConfirmModalExample.parameters = {\n  ...BsConfirmModalExample.parameters,\n  docs: {\n    ...BsConfirmModalExample.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const confirmModalState = useConfirmModal();\\n  return <div>\\n      <h1>Deprecated</h1>\\n      <p className=\\\"mb-3\\\">\\n        This component is now deprecated, use BsWwConfirmModal instead.{' '}\\n      </p>\\n      <div className=\\\"mb-3\\\">\\n        <Button variant=\\\"primary\\\" onClick={() => confirmModalState.showConfirm({\\n        onConfirm: async () => {\\n          await new Promise(resolve => {\\n            setTimeout(() => {\\n              // eslint-disable-next-line no-alert\\n              alert('Confirmed successfully');\\n              resolve(null);\\n            }, 500);\\n          });\\n        }\\n      })}>\\n          Open modal (successful confirm)\\n        </Button>\\n      </div>\\n      <div className=\\\"mb-3\\\">\\n        <Button variant=\\\"primary\\\" onClick={() => confirmModalState.showConfirm({\\n        onConfirm: async () => {\\n          await new Promise((resolve, reject) => {\\n            setTimeout(() => {\\n              reject(new Error('I failed'));\\n            }, 500);\\n          });\\n        }\\n      })}>\\n          Open modal (failed confirm)\\n        </Button>\\n      </div>\\n      <div>\\n        <Button variant=\\\"primary\\\" onClick={() => confirmModalState.showConfirm({\\n        dontAutoCloseOnSuccess: true,\\n        onConfirm: async () => {\\n          await new Promise(resolve => {\\n            setTimeout(() => {\\n              // eslint-disable-next-line no-alert\\n              alert('Confirmed successfully');\\n              resolve(null);\\n            }, 500);\\n          });\\n        }\\n      })}>\\n          {`Open modal (successful confirm & don't auto-close on success)`}\\n        </Button>\\n      </div>\\n\\n      <BsConfirmModal {...confirmModalState} />\\n    </div>;\\n}\",\n      ...BsConfirmModalExample.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{"bs-confirm-modal-example":{startLoc:{col:41,line:6},endLoc:{col:1,line:60},startBody:{col:41,line:6},endBody:{col:1,line:60}}}}},title:"Bootstrap/BsConfirmModal (deprecated)",component:BsConfirmModalExample};BsConfirmModalExample.parameters={...BsConfirmModalExample.parameters,docs:{...BsConfirmModalExample.parameters?.docs,source:{originalSource:'() => {\n  const confirmModalState = useConfirmModal();\n  return <div>\n      <h1>Deprecated</h1>\n      <p className="mb-3">\n        This component is now deprecated, use BsWwConfirmModal instead.{\' \'}\n      </p>\n      <div className="mb-3">\n        <Button variant="primary" onClick={() => confirmModalState.showConfirm({\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              // eslint-disable-next-line no-alert\n              alert(\'Confirmed successfully\');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (successful confirm)\n        </Button>\n      </div>\n      <div className="mb-3">\n        <Button variant="primary" onClick={() => confirmModalState.showConfirm({\n        onConfirm: async () => {\n          await new Promise((resolve, reject) => {\n            setTimeout(() => {\n              reject(new Error(\'I failed\'));\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (failed confirm)\n        </Button>\n      </div>\n      <div>\n        <Button variant="primary" onClick={() => confirmModalState.showConfirm({\n        dontAutoCloseOnSuccess: true,\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              // eslint-disable-next-line no-alert\n              alert(\'Confirmed successfully\');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          {`Open modal (successful confirm & don\'t auto-close on success)`}\n        </Button>\n      </div>\n\n      <BsConfirmModal {...confirmModalState} />\n    </div>;\n}',...BsConfirmModalExample.parameters?.docs?.source}}};const __namedExportsOrder=["BsConfirmModalExample"];try{BsConfirmModalExample.displayName="BsConfirmModalExample",BsConfirmModalExample.__docgenInfo={description:"",displayName:"BsConfirmModalExample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/bootstrap/ConfirmModal.stories.tsx#BsConfirmModalExample"]={docgenInfo:BsConfirmModalExample.__docgenInfo,name:"BsConfirmModalExample",path:"src/stories/bootstrap/ConfirmModal.stories.tsx#BsConfirmModalExample"})}catch(__react_docgen_typescript_loader_error){}}}]);