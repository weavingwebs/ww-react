"use strict";(self.webpackChunk_weavingwebs_ww_react=self.webpackChunk_weavingwebs_ww_react||[]).push([[213],{"./src/stories/bootstrap/BsWwConfirmModal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BsWwConfirmModalExample:()=>BsWwConfirmModalExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _hooks_useConfirmModal__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/hooks/useConfirmModal.ts"),_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),_bootstrap__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/bootstrap/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const BsWwConfirmModalExample=()=>{const confirmModalState=(0,_hooks_useConfirmModal__WEBPACK_IMPORTED_MODULE_0__.t)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"mb-3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button",{type:"button",className:"btn btn-primary",onClick:()=>confirmModalState.showConfirm({onConfirm:async()=>{await new Promise((resolve=>{setTimeout((()=>{alert("Confirmed successfully"),resolve(null)}),500)}))}}),children:"Open modal (successful confirm)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"mb-3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button",{type:"button",className:"btn btn-primary",onClick:()=>confirmModalState.showConfirm({size:"fullscreen",onConfirm:async()=>{await new Promise(((resolve,reject)=>{setTimeout((()=>{reject(new Error("I failed"))}),500)}))}}),children:"Open modal (failed confirm)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button",{type:"button",className:"btn btn-primary",onClick:()=>confirmModalState.showConfirm({dontAutoCloseOnSuccess:!0,onConfirm:async()=>{await new Promise((resolve=>{setTimeout((()=>{alert("Confirmed successfully"),resolve(null)}),500)}))}}),children:"Open modal (successful confirm & don't auto-close on success)"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.ny,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_bootstrap__WEBPACK_IMPORTED_MODULE_2__.yj,{...confirmModalState})})]})};BsWwConfirmModalExample.displayName="BsWwConfirmModalExample";const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'import { FC } from \'react\';\nimport { Meta } from \'@storybook/react\';\nimport { useConfirmModal } from \'../../hooks/useConfirmModal\';\nimport { ModalContextProvider } from \'../../components\';\nimport { BsWwConfirmModal } from \'../../bootstrap\';\nexport const BsWwConfirmModalExample: FC = () => {\n  const confirmModalState = useConfirmModal();\n  return <div>\n      <div className="mb-3">\n        <button type="button" className="btn btn-primary" onClick={() => confirmModalState.showConfirm({\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              \n              alert(\'Confirmed successfully\');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (successful confirm)\n        </button>\n      </div>\n      <div className="mb-3">\n        <button type="button" className="btn btn-primary" onClick={() => confirmModalState.showConfirm({\n        size: \'fullscreen\',\n        onConfirm: async () => {\n          await new Promise((resolve, reject) => {\n            setTimeout(() => {\n              reject(new Error(\'I failed\'));\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (failed confirm)\n        </button>\n      </div>\n      <div>\n        <button type="button" className="btn btn-primary" onClick={() => confirmModalState.showConfirm({\n        dontAutoCloseOnSuccess: true,\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              \n              alert(\'Confirmed successfully\');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          {`Open modal (successful confirm & don\'t auto-close on success)`}\n        </button>\n      </div>\n\n      <ModalContextProvider>\n        <BsWwConfirmModal {...confirmModalState} />\n      </ModalContextProvider>\n    </div>;\n};\nconst meta: Meta = {\n  title: \'Bootstrap/BsWwConfirmModal\',\n  component: BsWwConfirmModalExample\n};\nexport default meta;\nBsWwConfirmModalExample.parameters = {\n  ...BsWwConfirmModalExample.parameters,\n  docs: {\n    ...BsWwConfirmModalExample.parameters?.docs,\n    source: {\n      originalSource: "() => {\\n  const confirmModalState = useConfirmModal();\\n  return <div>\\n      <div className=\\"mb-3\\">\\n        <button type=\\"button\\" className=\\"btn btn-primary\\" onClick={() => confirmModalState.showConfirm({\\n        onConfirm: async () => {\\n          await new Promise(resolve => {\\n            setTimeout(() => {\\n              // eslint-disable-next-line no-alert\\n              alert(\'Confirmed successfully\');\\n              resolve(null);\\n            }, 500);\\n          });\\n        }\\n      })}>\\n          Open modal (successful confirm)\\n        </button>\\n      </div>\\n      <div className=\\"mb-3\\">\\n        <button type=\\"button\\" className=\\"btn btn-primary\\" onClick={() => confirmModalState.showConfirm({\\n        size: \'fullscreen\',\\n        onConfirm: async () => {\\n          await new Promise((resolve, reject) => {\\n            setTimeout(() => {\\n              reject(new Error(\'I failed\'));\\n            }, 500);\\n          });\\n        }\\n      })}>\\n          Open modal (failed confirm)\\n        </button>\\n      </div>\\n      <div>\\n        <button type=\\"button\\" className=\\"btn btn-primary\\" onClick={() => confirmModalState.showConfirm({\\n        dontAutoCloseOnSuccess: true,\\n        onConfirm: async () => {\\n          await new Promise(resolve => {\\n            setTimeout(() => {\\n              // eslint-disable-next-line no-alert\\n              alert(\'Confirmed successfully\');\\n              resolve(null);\\n            }, 500);\\n          });\\n        }\\n      })}>\\n          {`Open modal (successful confirm & don\'t auto-close on success)`}\\n        </button>\\n      </div>\\n\\n      <ModalContextProvider>\\n        <BsWwConfirmModal {...confirmModalState} />\\n      </ModalContextProvider>\\n    </div>;\\n}",\n      ...BsWwConfirmModalExample.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{"bs-ww-confirm-modal-example":{startLoc:{col:43,line:6},endLoc:{col:1,line:59},startBody:{col:43,line:6},endBody:{col:1,line:59}}}}},title:"Bootstrap/BsWwConfirmModal",component:BsWwConfirmModalExample};BsWwConfirmModalExample.parameters={...BsWwConfirmModalExample.parameters,docs:{...BsWwConfirmModalExample.parameters?.docs,source:{originalSource:'() => {\n  const confirmModalState = useConfirmModal();\n  return <div>\n      <div className="mb-3">\n        <button type="button" className="btn btn-primary" onClick={() => confirmModalState.showConfirm({\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              // eslint-disable-next-line no-alert\n              alert(\'Confirmed successfully\');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (successful confirm)\n        </button>\n      </div>\n      <div className="mb-3">\n        <button type="button" className="btn btn-primary" onClick={() => confirmModalState.showConfirm({\n        size: \'fullscreen\',\n        onConfirm: async () => {\n          await new Promise((resolve, reject) => {\n            setTimeout(() => {\n              reject(new Error(\'I failed\'));\n            }, 500);\n          });\n        }\n      })}>\n          Open modal (failed confirm)\n        </button>\n      </div>\n      <div>\n        <button type="button" className="btn btn-primary" onClick={() => confirmModalState.showConfirm({\n        dontAutoCloseOnSuccess: true,\n        onConfirm: async () => {\n          await new Promise(resolve => {\n            setTimeout(() => {\n              // eslint-disable-next-line no-alert\n              alert(\'Confirmed successfully\');\n              resolve(null);\n            }, 500);\n          });\n        }\n      })}>\n          {`Open modal (successful confirm & don\'t auto-close on success)`}\n        </button>\n      </div>\n\n      <ModalContextProvider>\n        <BsWwConfirmModal {...confirmModalState} />\n      </ModalContextProvider>\n    </div>;\n}',...BsWwConfirmModalExample.parameters?.docs?.source}}};const __namedExportsOrder=["BsWwConfirmModalExample"];try{BsWwConfirmModalExample.displayName="BsWwConfirmModalExample",BsWwConfirmModalExample.__docgenInfo={description:"",displayName:"BsWwConfirmModalExample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/bootstrap/BsWwConfirmModal.stories.tsx#BsWwConfirmModalExample"]={docgenInfo:BsWwConfirmModalExample.__docgenInfo,name:"BsWwConfirmModalExample",path:"src/stories/bootstrap/BsWwConfirmModal.stories.tsx#BsWwConfirmModalExample"})}catch(__react_docgen_typescript_loader_error){}}}]);